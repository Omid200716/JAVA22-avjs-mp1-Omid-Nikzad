{"mappings":"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","sources":["src/modules/dataBase2.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-3247579f106ea6b0.js","src/modules/game.js","node_modules/@parcel/runtime-js/lib/runtime-685b2c156bd25fed.js","node_modules/@parcel/runtime-js/lib/runtime-2949fa537357c128.js","node_modules/@parcel/runtime-js/lib/runtime-3952b5027bb9ea01.js","src/modules/main.js"],"sourcesContent":["// hämta data från firebase\r\nexport async function getHighScoreList() {\r\n    const url = 'https://highscore-66ea9-default-rtdb.europe-west1.firebasedatabase.app/highscore.json'\r\n    \r\n    \r\n    const response = await fetch(url);\r\n  \r\n    const data = await response.json();\r\n    return data;\r\n}\r\n    \r\n\r\n\r\n\r\n  ","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jaqnt\\\":\\\"index.df371eab.js\\\",\\\"f6pXR\\\":\\\"paper.aadb1234.png\\\",\\\"iWrrx\\\":\\\"rock.605d013f.png\\\",\\\"7Didw\\\":\\\"scissor.aa74284c.png\\\"}\"));","import { getHighScoreList } from \"./dataBase2.js\";\r\n\r\n//prompt method for att tar emot user name\r\nconst addUserName = prompt(\"Enter you name please!\");\r\nconst name = document.querySelector(\".userName\");\r\nname.innerText = addUserName;\r\nconst divContainer = document.querySelector(\".divContainer\");\r\n\r\nexport function game() {\r\n  // divContainer som behåller alla\r\n  const imageBox = document.querySelectorAll(\".items\");\r\n  const button = document.querySelector(\".button\");\r\n\r\n  //med hjälp av for loopen addEventlistere tillägg i alla image elementer\r\n  for (let i = 0; i < imageBox.length; i++) {\r\n    imageBox[i].addEventListener(\"click\", () => {\r\n      //ett random nummer for Cpu val\r\n      const randomN = Math.floor((Math.random() * 10) / 4);\r\n      // console.log(randomN + \" computer\");\r\n\r\n      divContainer.innerHTML = \"\";\r\n      cpuLogic(randomN);\r\n      gameLogic(i, randomN);\r\n    });\r\n  }\r\n\r\n  // med hjälp av den här function gömma man user val image\r\n  function hiddenElement() {\r\n    for (let i = 0; i < imageBox.length; i++) {\r\n      imageBox[i].classList.add(\"hidden\");\r\n    }\r\n  }\r\n\r\n  let userPoint = 0;\r\n\r\n  // med hjälp av den här function sätt man vår vilkor till cpu\r\n  async function cpuLogic(randomNumber) {\r\n    //getHichScoreList();\r\n\r\n    console.log(randomNumber);\r\n    if (randomNumber == 0) {\r\n      const image1 = document.createElement(\"img\");\r\n      divContainer.append(image1);\r\n\r\n      const imgUrl1 = new URL(\"../img/paper.png\", import.meta.url);\r\n      image1.src = imgUrl1.href;\r\n      createElement(\"paper\");\r\n    }\r\n    if (randomNumber == 1) {\r\n      const image2 = document.createElement(\"img\");\r\n      divContainer.append(image2);\r\n\r\n      const imgUrl2 = new URL(\"../img/rock.png\", import.meta.url);\r\n      image2.src = imgUrl2.href;\r\n      createElement(\"rock\");\r\n    } else if (randomNumber == 2) {\r\n      const image3 = document.createElement(\"img\");\r\n      divContainer.append(image3);\r\n\r\n      const imgUrl3 = new URL(\"../img/scissor.png\", import.meta.url);\r\n      image3.src = imgUrl3.href;\r\n      createElement(\"scissor\");\r\n    }\r\n  }\r\n\r\n  userPoint = 0;\r\n\r\n  // Den här function gör hela spel logic.\r\n  async function gameLogic(user, cpu) {\r\n    const userP = document.querySelector(\".userP\");\r\n    const cpuP = document.querySelector(\".cpuP\");\r\n\r\n    if (\r\n      (user == 0 && cpu == 1) ||\r\n      (user == 2 && cpu == 0) ||\r\n      (user == 1 && cpu == 2)\r\n    ) {\r\n      userPoint++;\r\n      userP.innerText = userPoint;\r\n      createElement(addUserName + \"win the game!\");\r\n    } else if (\r\n      (user == 0 && cpu == 0) ||\r\n      (user == 1 && cpu == 1) ||\r\n      (user == 2 && cpu == 2)\r\n    ) {\r\n      createElement(\"Equal\");\r\n    } else {\r\n      createElement(`Cpu win the game!`);\r\n      hiddenElement();\r\n\r\n      putPlayerTODatabase(addUserName, userPoint);\r\n\r\n      //console.log(addUserName + \"demo\" + userPoint);\r\n    }\r\n  }\r\n  // hämta datan från URL som innehåller en JSON fil med högsta poänglistor.\r\n  async function getHighScore() {\r\n    //highscore array listan\r\n    const highscore = await getHighScoreList();\r\n\r\n    const highScoreList = document.querySelector(\"#high-score-list\");\r\n\r\n    const ul = document.createElement(\"ul\");\r\n\r\n    for (let i = 0; i < highscore.length; i++) {\r\n      let objekt = highscore[i];\r\n\r\n      const li = document.createElement(\"li\");\r\n\r\n      li.textContent += `${objekt.name}: ${objekt.score}`;\r\n      ul.appendChild(li);\r\n    }\r\n\r\n    highScoreList.innerHTML = \"\";\r\n    highScoreList.appendChild(ul);\r\n  }\r\n\r\n  async function putPlayerTODatabase(name, poäng) {\r\n    const databaseURL =\r\n      \"https://highscore-66ea9-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\r\n\r\n    const response = await fetch(databaseURL);\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    let highscore2 = Object.keys(data || {}).map((key) => ({\r\n      name: data[key].name,\r\n      score: data[key].score,\r\n    }));\r\n\r\n    let firstEmptyIndex = highscore2.findIndex(\r\n      (item) =>\r\n        item.name === undefined ||\r\n        item.name === null ||\r\n        item.score === 0 ||\r\n        (item.name === undefined && item.name === null && item.score === 0)\r\n    );\r\n\r\n    if (firstEmptyIndex === -0) {\r\n      highscore2 = highscore2.filter((item) => item.score !== 0);\r\n      firstEmptyIndex = highscore2.findIndex((item) => item.score === 0);\r\n    }\r\n\r\n    if (firstEmptyIndex >= 0) {\r\n      highscore2[firstEmptyIndex] = { name: name, score: poäng };\r\n    } else {\r\n      const minScoreIndex = highscore2.reduce(\r\n        (minIndex, item, index) =>\r\n          item.score < highscore2[minIndex].score ? index : minIndex,\r\n        0\r\n      );\r\n      highscore2[minScoreIndex] = { name: name, score: poäng };\r\n    }\r\n\r\n    console.log(name + \"\" + poäng);\r\n\r\n    highscore2.sort((a, b) => b.score - a.score);\r\n\r\n    highscore2.splice(5);\r\n\r\n    const headers = { \"Content-Type\": \"application/json \" };\r\n    const body = JSON.stringify(highscore2);\r\n    const putResponse = await fetch(databaseURL, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: body,\r\n    });\r\n    if (!putResponse.ok) {\r\n      throw new Error(`HTTP error! status: ${putResponse.status}`);\r\n    }\r\n\r\n    console.log(\"Firebase database updated successfully\");\r\n    await getHighScore();\r\n  }\r\n\r\n  function createElement(data) {\r\n    const element = document.createElement(\"h4\");\r\n    divContainer.append(element);\r\n    element.innerText = data;\r\n  }\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"f6pXR\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iWrrx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7Didw\")).toString();","\r\nimport {game} from './game.js';\r\n\r\ngame();\r\n"],"names":["async","$16042026f8ee4a06$export$646e725f69f45119","response","fetch","json","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$efff50eca450a049$var$addUserName","prompt","document","querySelector","innerText","$efff50eca450a049$var$divContainer","$e8ec2bebfd5437ac$exports","URL","resolve","url","toString","$98503992620f0dfc$exports","$849665490728915e$exports","imageBox","querySelectorAll","addEventListener","randomN","Math","floor","random","innerHTML","cpuLogic","gameLogic","userPoint","randomNumber","console","log","image1","createElement","append","imgUrl1","src","href","image2","imgUrl2","image3","imgUrl3","user","cpu","userP","classList","add","hiddenElement","name","databaseURL","data","highscore2","map","key","score","firstEmptyIndex","findIndex","item","undefined","filter","minScoreIndex","reduce","minIndex","index","sort","a","b","splice","headers","body","stringify","putResponse","method","ok","status","highscore","highScoreList","ul","objekt","li","textContent","appendChild","getHighScore","putPlayerTODatabase","element"],"version":3,"file":"index.df371eab.js.map"}